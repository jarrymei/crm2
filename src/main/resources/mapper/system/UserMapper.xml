<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhidi.system.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zhidi.system.entity.User" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="SALT" property="salt" jdbcType="VARCHAR" />
    <result column="SORTNUM" property="sortnum" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="UPDATETIME" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="USERNOTE" property="usernote" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="CREATEBY" property="createby" jdbcType="VARCHAR" />
    <result column="UPDATEBY" property="updateby" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, CREATETIME, EMAIL, PASSWORD, PHONE, SALT, SORTNUM, STATUS, UPDATETIME, USERNOTE, 
    USERNAME, CREATEBY, UPDATEBY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_SYSTEM_USER
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TB_SYSTEM_USER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zhidi.system.entity.User" >
  	<selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
  		 SELECT sys_guid() FROM DUAL
  	</selectKey>
    insert into TB_SYSTEM_USER (ID, CREATETIME, EMAIL, 
      PASSWORD, PHONE, SALT, 
      SORTNUM, STATUS, UPDATETIME, 
      USERNOTE, USERNAME, CREATEBY, 
      UPDATEBY)
    values (#{id,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{sortnum,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{usernote,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{createby,jdbcType=VARCHAR}, 
      #{updateby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhidi.system.entity.User" >
    insert into TB_SYSTEM_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="createtime != null" >
        CREATETIME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="salt != null" >
        SALT,
      </if>
      <if test="sortnum != null" >
        SORTNUM,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="updatetime != null" >
        UPDATETIME,
      </if>
      <if test="usernote != null" >
        USERNOTE,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="createby != null" >
        CREATEBY,
      </if>
      <if test="updateby != null" >
        UPDATEBY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sortnum != null" >
        #{sortnum,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usernote != null" >
        #{usernote,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhidi.system.entity.User" >
    update TB_SYSTEM_USER
    <set >
      <if test="createtime != null" >
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        SALT = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sortnum != null" >
        SORTNUM = #{sortnum,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null" >
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usernote != null" >
        USERNOTE = #{usernote,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createby != null" >
        CREATEBY = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null" >
        UPDATEBY = #{updateby,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhidi.system.entity.User" >
    update TB_SYSTEM_USER
    set CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      EMAIL = #{email,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      SALT = #{salt,jdbcType=VARCHAR},
      SORTNUM = #{sortnum,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      USERNOTE = #{usernote,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      CREATEBY = #{createby,jdbcType=VARCHAR},
      UPDATEBY = #{updateby,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="queryByUserName" resultType="com.zhidi.system.entity.User">
  	select * from tb_system_user where username=#{username}
  </select>
  
  <select id="count" resultType="integer">
  	select count(1) from tb_system_user
  </select>
  
  <resultMap type="com.zhidi.system.entity.vo.UserVO" id="queryByPageMap">
  	<id property="user.id" column="id"/>
  	<result property="user.username" column="username"/>
  	<result property="user.phone" column="phone"/>
  	<result property="user.email" column="email"/>
  	<result property="role.rolename" column="rolename"/>
  	<result property="createUser" column="createUser"/>
  	<result property="user.createtime" column="createTime"/>
  	<result property="updateUser" column="updateUser"/>
  	<result property="user.updatetime" column="updateTime"/>
  	<result property="user.status" column="status"/>
  </resultMap>
  
  
  <select id="queryByPage" resultMap="queryByPageMap">
  	select * from 
	    (select 
	    rownum rn,
	    tsu1.id,
	    tsu1.username,
	    tsu1.phone,
	    tsu1.email,
	    (select wm_concat(rolename) from tb_system_role tsr left join tb_system_user_role tsur on tsr.id=tsur.roleid where tsur.userid= tsu1.id) rolename,
	    tsu2.username createUser,
	    tsu1.createtime createTime,
	    tsu3.username updateUser,
	    tsu1.updatetime updateTime,
	    tsu1.status
	from 
	tb_system_user tsu1
	left join tb_system_user tsu2 on tsu1.createby=tsu2.id
	left join tb_system_user tsu3 on tsu1.updateby=tsu3.id
	where rownum &lt;= #{pageNumber}*#{pageSize}) where rn>(#{pageNumber}-1)*#{pageSize}
  </select>
  
  <delete id="delBatch">
  	delete from tb_system_user where id in
  	<foreach collection="ids" item="id" open="(" close=")" separator=",">
  		#{id}
  	</foreach>
  </delete>
</mapper>